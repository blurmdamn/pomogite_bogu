from datetime import datetime
from pydantic import BaseModel, Field
from typing_extensions import Optional

from src.schemas.store import ShowStore


class ProductCreate(BaseModel):
    """
    –°—Ö–µ–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–µ–º–æ–≥–æ.
    """
    name: str = Field(..., min_length=1)
    price: float = Field(..., gt=0)
    wishlist_id: int


class ShowProduct(BaseModel):
    """
    –°—Ö–µ–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–¥—É–∫—Ç–µ.
    """
    id: int
    name: str
    price: float
    wishlist_id: int
    created_at: datetime

    class ConfigDict:
        from_attributes = True


class UpdateProduct(BaseModel):
    """
    –°—Ö–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞.
    """
    name: Optional[str] = None
    price: Optional[float] = None

class ProductSearchResult(BaseModel):
    id: int
    name: str
    price: float
    url: str
    created_at: datetime

    class ConfigDict:
        from_attributes = True


class ShowProductWithStore(BaseModel):
    id: int
    name: str
    price: float
    url: str
    created_at: datetime
    store: Optional[ShowStore]  # üëà —Å—é–¥–∞ –∫–ª–∞–¥—ë—Ç—Å—è –º–∞–≥–∞–∑–∏–Ω

    class ConfigDict:
        from_attributes = True