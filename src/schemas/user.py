from pydantic import BaseModel, Field
from typing_extensions import Optional


class UserCreate(BaseModel):
    """
    –°—Ö–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    username: str = Field(..., min_length=3, max_length=30)
    email: str = Field(..., pattern=r'^\S+@\S+\.\S+$')
    password: str = Field(..., min_length=8)


class ShowUser(BaseModel):
    """
    –°—Ö–µ–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
    """
    id: int
    username: str
    email: str
    is_active: bool
    telegram_id: Optional[int] = None  # üëà –¥–æ–±–∞–≤–∏—Ç—å

    class ConfigDict:
        from_attributes = True


class UpdateUser(BaseModel):
    """
    –°—Ö–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
    """
    username: Optional[str] = None
    email: Optional[str] = None
    password: Optional[str] = None


class UpdateTelegramID(BaseModel):
    """
    –°—Ö–µ–º–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id: int
    telegram_id: int
